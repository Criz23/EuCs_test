# Generated by Django 2.2.13 on 2021-10-24 15:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organisations', '0004_auto_20210808_1751'),
        ('authors', '0001_initial'),
        ('projects', '0003_project_moderated'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Audience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audience', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resources.Category')),
            ],
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('educationLevel', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learningResourceType', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('abstract', models.CharField(max_length=3000)),
                ('description_citizen_science_aspects', models.CharField(max_length=2000)),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                ('datePublished', models.IntegerField(blank=True, null=True)),
                ('resourceDOI', models.CharField(blank=True, max_length=100, null=True)),
                ('inLanguage', models.CharField(max_length=100)),
                ('license', models.CharField(blank=True, max_length=300, null=True)),
                ('image1', models.ImageField(blank=True, max_length=300, null=True, upload_to='images/')),
                ('imageCredit1', models.CharField(blank=True, max_length=300, null=True)),
                ('image2', models.ImageField(blank=True, max_length=300, null=True, upload_to='images/')),
                ('imageCredit2', models.CharField(blank=True, max_length=300, null=True)),
                ('isTrainingResource', models.BooleanField(blank=True, null=True)),
                ('timeRequired', models.FloatField(blank=True, null=True)),
                ('conditionsOfAccess', models.CharField(blank=True, max_length=300, null=True)),
                ('dateUploaded', models.DateTimeField(verbose_name='Date Uploaded')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('dateUpdated', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('moderated', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(blank=True, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('own', models.BooleanField(blank=True, null=True)),
                ('audience', models.ManyToManyField(to='resources.Audience')),
                ('authors', models.ManyToManyField(to='authors.Author')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='resources.Category')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('educationLevel', models.ManyToManyField(to='resources.EducationLevel')),
                ('keywords', models.ManyToManyField(to='resources.Keyword')),
                ('learningResourceType', models.ManyToManyField(to='resources.LearningResourceType')),
                ('organisation', models.ManyToManyField(to='organisations.Organisation')),
                ('project', models.ManyToManyField(to='projects.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UnApprovedResources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='resources.Resource')),
            ],
        ),
        migrations.CreateModel(
            name='ResourcePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.Resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='theme',
            field=models.ManyToManyField(to='resources.Theme'),
        ),
        migrations.CreateModel(
            name='ApprovedResources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='resources.Resource')),
            ],
        ),
        migrations.CreateModel(
            name='SavedResources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.Resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'resource')},
            },
        ),
        migrations.CreateModel(
            name='ResourcesGrouped',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.ResourceGroup')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.Resource')),
            ],
            options={
                'unique_together': {('group', 'resource')},
            },
        ),
        migrations.CreateModel(
            name='BookmarkedResources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.Resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'resource')},
            },
        ),
    ]
