# Generated by Django 2.2.13 on 2021-10-23 22:26

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('organisations', '0004_auto_20210808_1751'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('paragraph', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DifficultyLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficultyLevel', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FundingBody',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GeographicExtend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geographicextend', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HasTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hasTag', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.TextField()),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='OriginDatabase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('originDatabase', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ParticipationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participationtask', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('dateUpdated', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('name', models.CharField(max_length=200)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(max_length=3000)),
                ('description_citizen_science_aspects', models.CharField(max_length=2000)),
                ('aim', models.CharField(max_length=2000)),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End date')),
                ('howToParticipate', models.CharField(blank=True, max_length=2000, null=True)),
                ('equipment', models.CharField(blank=True, max_length=2000, null=True)),
                ('projectlocality', models.CharField(blank=True, max_length=300, null=True)),
                ('projectGeographicLocation', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('author_email', models.CharField(blank=True, max_length=100, null=True)),
                ('fundingProgram', models.CharField(blank=True, max_length=500, null=True)),
                ('image1', models.ImageField(blank=True, max_length=300, null=True, upload_to='images/')),
                ('imageCredit1', models.CharField(blank=True, max_length=300, null=True)),
                ('image2', models.ImageField(blank=True, max_length=300, null=True, upload_to='images/')),
                ('imageCredit2', models.CharField(blank=True, max_length=300, null=True)),
                ('image3', models.ImageField(blank=True, max_length=300, null=True, upload_to='images/')),
                ('imageCredit3', models.CharField(blank=True, max_length=300, null=True)),
                ('origin', models.CharField(blank=True, max_length=100, null=True)),
                ('originURL', models.CharField(blank=True, max_length=200, null=True)),
                ('originUID', models.CharField(blank=True, max_length=200, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('featured', models.BooleanField(default=False)),
                ('host', models.CharField(blank=True, max_length=200, null=True)),
                ('doingAtHome', models.BooleanField(default=False, null=True)),
                ('participatingInaContest', models.BooleanField(default=False, null=True)),
                ('hidden', models.BooleanField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customField', models.ManyToManyField(blank=True, to='projects.CustomField')),
                ('difficultyLevel', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.DifficultyLevel')),
                ('fundingBody', models.ManyToManyField(blank=True, to='projects.FundingBody')),
                ('geographicextend', models.ManyToManyField(blank=True, to='projects.GeographicExtend')),
                ('hasTag', models.ManyToManyField(to='projects.HasTag')),
                ('keywords', models.ManyToManyField(blank=True, to='projects.Keyword')),
                ('mainOrganisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_organisation', to='organisations.Organisation')),
                ('organisation', models.ManyToManyField(to='organisations.Organisation')),
                ('originDatabase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.OriginDatabase')),
                ('participationtask', models.ManyToManyField(to='projects.ParticipationTask')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UnApprovedProjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
        ),
        migrations.CreateModel(
            name='TranslatedProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translatedDescription', models.CharField(max_length=3000)),
                ('translatedAim', models.CharField(max_length=2000)),
                ('translatedHowToParticipate', models.CharField(max_length=2000)),
                ('translatedEquipment', models.CharField(max_length=2000)),
                ('inLanguage', models.TextField(max_length=5)),
                ('dateCreated', models.DateTimeField(auto_now=True, verbose_name='Created date')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Status'),
        ),
        migrations.AddField(
            model_name='project',
            name='topic',
            field=models.ManyToManyField(to='projects.Topic'),
        ),
        migrations.AddField(
            model_name='project',
            name='translatedProject',
            field=models.ManyToManyField(to='projects.TranslatedProject'),
        ),
        migrations.CreateModel(
            name='ApprovedProjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
            ],
        ),
        migrations.CreateModel(
            name='FollowedProjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'project')},
            },
        ),
    ]
